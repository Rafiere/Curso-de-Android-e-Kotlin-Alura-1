<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <!--A propriedade "match_parent" diz que a altura dos componentes
    em relação ao layout será de acordo com o elemento-pai. Como o elemento pai
    do "ConstraintLayout" é a própria tela, vai crescer de acordo com a tela, ocupando toda a largura e a
    altura.-->

    <TextView
        android:layout_margin="16dp"
        android:id="@+id/nome"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Cesta de frutas"
        tools:text="Cesta de frutas"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintTop_toTopOf="parent"/>

    <!-- O "wrap_content" significa que esse arquivo vai crescer apenas no tamanho
     de seu conteúdo, assim, como o conteúdo desse arquivo é um texto, ele crescerá apenas no
     tamanho desse texto.-->

    <!-- O "layout_constraintEnd" define que o eixo X dessa view ficará junto com o
     final do elemento-pai, que, nesse caso, é o ConstrantLayout.

     O "layout_constraintTop" define que o eixo Y dessa view ficará na parte superior
     do elemento-pai, que é a tela.-->

    <!-- O "tools:text" servirá apenas para inserirmos um valor de testes no preview da
     aplicação, enquanto que o "android:text" conterá o valor real que será exibido na
     tela do celular.-->

    <TextView
        android:id="@+id/descricao"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginEnd="16dp"
        android:text=""
        tools:text="Laranja, manga e uva"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/nome"/>

    <!-- O "id" é um ID para uma determinada view, enquanto que, ao
    utilizarmos o "constraintTop_toBottomOf", estamos definindo que a parte
    superior dessa view, no eixo Y, de altura, ficará abaixo da view que possui o id "nome", ou seja, ela
    ficará embaixo da view anterior.-->

    <TextView
        android:id="@+id/valor"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginStart="16dp"
        android:layout_marginEnd="16dp"
        android:text=""
        tools:text="19.99"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/descricao"/>

    <!-- O "marginStart" significa uma margem no início, enquanto que o
     "marginEnd" significa uma margem no final.-->

</androidx.constraintlayout.widget.ConstraintLayout>

<!-- A medida de "px" é problemática para o Android pois cada aparelho possui uma
quantidade de pixels diferentes, assim, o aplicativo não manterá o mesmo comportamento para
as diferentes telas, assim, é sempre recomendado utilizarmos o "dp", que utiliza um pixel virtual e
calculará a mesma quantidade de pixels em diferentes telas.

Apenas para alterarmos as fontes, não deveremos utilizar o "dp", e sim o "sp". A diferença do "sp" pro "dp" é que o "sp" possui
relação com ferramentas de acessibilidade, permitindo que o usuário aumente ou abaixe o tamanho da fonte das
telas.-->

<!-- O "wrap_content" define que o elemento crescerá apenas de acordo com
o seu tamanho.-->